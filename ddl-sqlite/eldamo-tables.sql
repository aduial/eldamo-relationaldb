-- FORM definition

CREATE TABLE FORM (
    ID integer NOT NULL,
    TXT varchar(255) NOT NULL, NORMALTXT VARCHAR(255),
    PRIMARY KEY (ID)
);

CREATE INDEX FORM_NORMALTXT_idx on  FORM 
(
	NORMALTXT
)
;
CREATE INDEX idx_form_txt on form(txt)
;


-- GRAMMAR definition

CREATE TABLE GRAMMAR (
    ID integer NOT NULL,
    TXT varchar(100) NOT NULL,
    PRIMARY KEY (ID)
);


-- CAT definition

CREATE TABLE CAT (
    ID integer NOT NULL,
    LABEL varchar(255),
    PARENT_ID integer,
    PRIMARY KEY (ID),
    FOREIGN KEY (PARENT_ID) REFERENCES CAT (ID)
);


-- "LANGUAGE" definition

CREATE TABLE LANGUAGE (
    ID integer NOT NULL,
    NAME varchar(255) NOT NULL,
    MNEMONIC varchar(10),
    PARENT_ID integer,
    PRIMARY KEY (ID),
    FOREIGN KEY (PARENT_ID) REFERENCES LANGUAGE (ID)
);


-- "TYPE" definition

CREATE TABLE TYPE (
    ID integer NOT NULL,
    TXT varchar(50) NOT NULL,
    PARENT_ID integer,
    PRIMARY KEY (ID),
    FOREIGN KEY (PARENT_ID) REFERENCES TYPE (ID)
);


-- DOC definition

CREATE TABLE DOC (
    ID integer NOT NULL,
    TXT varchar(20000) NOT NULL,
    DOCTYPE_ID integer,
    PRIMARY KEY (ID),
    FOREIGN KEY (DOCTYPE_ID) REFERENCES TYPE (ID)
);


-- GLOSS definition

CREATE TABLE GLOSS (
    ID integer NOT NULL,
    LANGUAGE_ID integer NOT NULL,
    TXT varchar(255) NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (ID)
);


-- LANGUAGE_DOC definition

CREATE TABLE LANGUAGE_DOC (
    LANGUAGE_ID integer NOT NULL,
    DOC_ID integer NOT NULL,
    ORDERING integer NOT NULL,
    PRIMARY KEY (LANGUAGE_ID,DOC_ID,ORDERING),
    FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (ID),
    FOREIGN KEY (DOC_ID) REFERENCES DOC (ID)
);


-- "SOURCE" definition

CREATE TABLE SOURCE (
    ID integer NOT NULL,
    NAME varchar(255),
    PREFIX varchar(255),
    SOURCETYPE_ID integer,
    PRIMARY KEY (ID),
    FOREIGN KEY (SOURCETYPE_ID) REFERENCES TYPE (ID)
);


-- SOURCE_DOC definition

CREATE TABLE SOURCE_DOC (
    SOURCE_ID integer NOT NULL,
    DOC_ID integer NOT NULL,
    ORDERING integer NOT NULL,
    PRIMARY KEY (SOURCE_ID,DOC_ID,ORDERING),
    FOREIGN KEY (DOC_ID) REFERENCES DOC (ID)
);


-- ENTRY definition

CREATE TABLE ENTRY (
    ID integer NOT NULL,
    FORM_ID integer NOT NULL,
    LANGUAGE_ID integer NOT NULL,
    GLOSS_ID integer,
    CAT_ID integer,
    RULE_FORM_ID integer,
    FROM_FORM_ID integer,
    STEM_FORM_ID integer,
    TENGWAR varchar(100),
    MARK varchar(10),
    ELDAMO_PAGEID varchar(50),
    ORDERFIELD varchar(50),
    ORTHO_FORM_ID integer,
    PARENT_ID integer,
    ORDERING integer,
    ENTRYTYPE_ID integer,
    PRIMARY KEY (ID),
    FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (ID),
    FOREIGN KEY (GLOSS_ID) REFERENCES GLOSS (ID),
    FOREIGN KEY (FROM_FORM_ID) REFERENCES FORM (ID),
    FOREIGN KEY (FORM_ID) REFERENCES FORM (ID),
    FOREIGN KEY (STEM_FORM_ID) REFERENCES FORM (ID),
    FOREIGN KEY (RULE_FORM_ID) REFERENCES FORM (ID),
    FOREIGN KEY (ENTRYTYPE_ID) REFERENCES TYPE (ID),
    FOREIGN KEY (CAT_ID) REFERENCES CAT (ID)
);

CREATE INDEX idx_entry_form_id on ENTRY(form_id);


-- ENTRY_DOC definition

CREATE TABLE ENTRY_DOC (
    ENTRY_ID integer NOT NULL,
    DOC_ID integer NOT NULL,
    ORDERING integer NOT NULL,
    FOREIGN KEY (DOC_ID) REFERENCES DOC (ID),
    FOREIGN KEY (ENTRY_ID) REFERENCES ENTRY (ID)
);


-- "REF" definition

CREATE TABLE REF (
    ID integer NOT NULL,
    ENTRY_ID integer,
    FORM_ID integer NOT NULL,
    GLOSS_ID integer,
    LANGUAGE_ID integer,
    SOURCE_ID integer NOT NULL,
    MARK varchar(10),
    RULE_FROMFORM_ID integer,
    RULE_RLFORM_ID integer,
    RULE_RULEFORM_ID integer,
    ORDERING integer,
    ENTRYTYPE_ID integer, SOURCE VARCHAR(255),
    PRIMARY KEY (ID),
    FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (ID),
    FOREIGN KEY (GLOSS_ID) REFERENCES GLOSS (ID),
    FOREIGN KEY (FORM_ID) REFERENCES FORM (ID),
    FOREIGN KEY (RULE_RLFORM_ID) REFERENCES FORM (ID),
    FOREIGN KEY (RULE_FROMFORM_ID) REFERENCES FORM (ID),
    FOREIGN KEY (RULE_RULEFORM_ID) REFERENCES FORM (ID),
    FOREIGN KEY (ENTRYTYPE_ID) REFERENCES TYPE (ID),
    FOREIGN KEY (ENTRY_ID) REFERENCES ENTRY (ID)
);

CREATE INDEX idx_ref_gloss_id on REF(gloss_id);
CREATE INDEX idx_ref_form_id on REF(form_id);


-- RULE definition

CREATE TABLE RULE (
    ID integer NOT NULL,
    ENTRY_ID integer NOT NULL,
    FROM_FORM_ID integer NOT NULL,
    RULE_FORM_ID integer NOT NULL,
    LANGUAGE_ID integer NOT NULL,
    ORDERING integer NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (RULE_FORM_ID) REFERENCES FORM (ID),
    FOREIGN KEY (FROM_FORM_ID) REFERENCES FORM (ID),
    FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (ID),
    FOREIGN KEY (ENTRY_ID) REFERENCES ENTRY (ID)
);


-- LINKED definition

CREATE TABLE LINKED (
    ID integer NOT NULL,
    LINKEDTYPE_ID integer NOT NULL,
    ENTRY_ID integer,
    REF_ID integer,
    TO_LANGUAGE_ID integer,
    TO_ENTRY_ID integer,
    ORDERING integer,
    SOURCE_ID integer,
    MARK varchar(10), SOURCE VARCHAR(255),
    PRIMARY KEY (ID),
    FOREIGN KEY (TO_LANGUAGE_ID) REFERENCES LANGUAGE (ID),
    FOREIGN KEY (TO_ENTRY_ID) REFERENCES ENTRY (ID),
    FOREIGN KEY (ENTRY_ID) REFERENCES ENTRY (ID),
    FOREIGN KEY (SOURCE_ID) REFERENCES SOURCE (ID),
    FOREIGN KEY (REF_ID) REFERENCES REF (ID),
    FOREIGN KEY (LINKEDTYPE_ID) REFERENCES TYPE (ID)
);

CREATE INDEX idx_linked_ref_id on LINKED(ref_id);
CREATE INDEX idx_linked_entry_id on LINKED(entry_id);


-- LINKED_DOC definition

CREATE TABLE LINKED_DOC (
    LINKED_ID integer NOT NULL,
    DOC_ID integer NOT NULL,
    ORDERING integer NOT NULL,
    FOREIGN KEY (DOC_ID) REFERENCES DOC (ID),
    FOREIGN KEY (LINKED_ID) REFERENCES LINKED (ID)
);


-- LINKED_FORM definition

CREATE TABLE LINKED_FORM (
    LINKED_ID integer NOT NULL,
    FORM_ID integer NOT NULL,
    ORDERING integer NOT NULL,
    FOREIGN KEY (FORM_ID) REFERENCES FORM (ID),
    FOREIGN KEY (LINKED_ID) REFERENCES LINKED (ID)
);

CREATE UNIQUE INDEX idx_linked_form_pk on linked_form(linked_id, form_id, ordering)
;


-- LINKED_GRAMMAR definition

CREATE TABLE LINKED_GRAMMAR (
    LINKED_ID integer,
    ENTRY_ID integer,
    GRAMMAR_ID integer NOT NULL,
    ORDERING integer NOT NULL, GRAMMARTYPE_ID INT,
    FOREIGN KEY (ENTRY_ID) REFERENCES ENTRY (ID),
    FOREIGN KEY (LINKED_ID) REFERENCES LINKED (ID),
    FOREIGN KEY (GRAMMAR_ID) REFERENCES GRAMMAR (ID),
    FOREIGN KEY (GRAMMARTYPE_ID) REFERENCES TYPE (ID)
);

CREATE UNIQUE INDEX idx_linked_grammar_pk on linked_grammar(linked_id, entry_id, grammar_id, ordering, grammartype_id)
;


-- RULESEQUENCE definition

CREATE TABLE RULESEQUENCE (
    DERIV_ID integer NOT NULL,
    FROM_FORM_ID integer,
    LANGUAGE_ID integer,
    RULE_FORM_ID integer,
    STAGE_FORM_ID integer,
    TO_ENTRY_ID integer,
    ORDERING integer,
    FOREIGN KEY (DERIV_ID) REFERENCES LINKED (ID),
    FOREIGN KEY (TO_ENTRY_ID) REFERENCES ENTRY (ID),
    FOREIGN KEY (STAGE_FORM_ID) REFERENCES FORM (ID),
    FOREIGN KEY (RULE_FORM_ID) REFERENCES FORM (ID),
    FOREIGN KEY (FROM_FORM_ID) REFERENCES FORM (ID),
    FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGE (ID)
);


-- EXAMPLE definition

CREATE TABLE EXAMPLE (
    LINKED_ID integer,
    REF_ID integer,
    SOURCE_ID integer NOT NULL,
    FORM_ID integer NOT NULL,
    ORDERING integer,
    EXAMPLETYPE_ID integer, SOURCE VARCHAR(255),
    FOREIGN KEY (FORM_ID) REFERENCES FORM (ID),
    FOREIGN KEY (EXAMPLETYPE_ID) REFERENCES TYPE (ID),
    FOREIGN KEY (SOURCE_ID) REFERENCES SOURCE (ID),
    FOREIGN KEY (REF_ID) REFERENCES REF (ID),
    FOREIGN KEY (LINKED_ID) REFERENCES LINKED (ID)
);